CREATE OR REPLACE FUNCTION tbl_partition_insert_trigger() 
RETURNS TRIGGER AS $$ \
		BEGIN \
		IF(NEW.join_date >= DATE '2012-11-01' AND \
		NEW.join_date < DATE '2012-12-01') THEN \
		INSERT INTO tbl_partition_201211 VALUES(NEW.*); \
	ELSIF(NEW.join_date >= DATE '2012-12-01' AND \ 
		NEW.join_date < DATE '2013-01-01') THEN \ 
		INSERT INTO tbl_partition_201212 VALUES(NEW.*); \
	ELSIF(NEW.join_date >= DATE '2013-01-01' AND
		NEW.join_date < DATE '2013-02-01') THEN
		INSERT INTO tbl_partition_201301 VALUES(NEW.*);
	ELSIF(NEW.join_date >= DATE '2013-02-01' AND
		NEW.join_date < DATE '2013-03-01') THEN
		INSERT INTO tbl_partition_201302 VALUES(NEW.*);
	ELSIF(NEW.join_date >= DATE '2013-03-01' AND
		NEW.join_date < DATE '2013-04-01') THEN
		INSERT INTO tbl_partition_201303 VALUES(NEW.*);
	ELSIF(NEW.join_date >= DATE '2013-04-01' AND
		NEW.join_date < DATE '2013-05-01') THEN
		INSERT INTO tbl_partition_201304 VALUES(NEW.*);
	ELSIF(NEW.join_date >= DATE '2013-05-01' AND
		NEW.join_date < DATE '2013-06-01') THEN
		INSERT INTO tbl_partition_201305 VALUES(NEW.*);
	ELSE
		RAISE EXCEPTION 'Date out of range. Fix the tbl_partition_insert_trigger() function!';
	END IF;
	RETURN NULL;
	END;  "